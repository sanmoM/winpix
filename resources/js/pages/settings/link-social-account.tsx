import PasswordController from '@/actions/App/Http/Controllers/Settings/PasswordController';
import HeadingSmall from '@/components/heading-small';
import AppLayout from '@/layouts/app-layout';
import SettingsLayout from '@/layouts/settings/layout';
import { BreadcrumbItem } from '@/types';
import { Form, Head } from '@inertiajs/react';
import Button from '../../components/shared/buttons/button';
import SocialAccountLinkCard from '@/components/settings/link-social-account/social-account-link-card';
import { FaGoogle } from 'react-icons/fa';
// Data for the link cards
const linkData = [
    {
        id: 1,
        name: 'Google',
        icon: (
            <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M25.7665 12.6498H24.7999V12.6H14V17.4H20.7817C19.7923 20.1941 17.1337 22.1999 14 22.1999C10.0238 22.1999 6.79998 18.9761 6.79998 15C6.79998 11.0238 10.0238 7.79998 14 7.79998C15.8354 7.79998 17.5051 8.49238 18.7765 9.62338L22.1707 6.22919C20.0275 4.2318 17.1607 3 14 3C7.37298 3 2 8.37298 2 15C2 21.6269 7.37298 26.9999 14 26.9999C20.6269 26.9999 25.9999 21.6269 25.9999 15C25.9999 14.1954 25.9171 13.41 25.7665 12.6498Z" fill="#FBC02D"></path><path d="M3.38281 9.41458L7.3254 12.306C8.39219 9.66478 10.9758 7.79998 13.9992 7.79998C15.8346 7.79998 17.5044 8.49238 18.7758 9.62338L22.1699 6.22919C20.0268 4.2318 17.16 3 13.9992 3C9.38999 3 5.39281 5.60219 3.38281 9.41458Z" fill="#E53935"></path><path d="M13.9994 26.9999C17.099 26.9999 19.9153 25.8137 22.0447 23.8847L18.3308 20.742C17.126 21.6546 15.6284 22.2 13.9994 22.2C10.8782 22.2 8.22799 20.2098 7.22959 17.4324L3.31641 20.4474C5.3024 24.3335 9.33559 26.9999 13.9994 26.9999Z" fill="#4CAF50"></path><path d="M25.7666 12.6499L25.757 12.6001H24.8H14V17.4001H20.7818C20.3066 18.7423 19.4432 19.8997 18.3296 20.7427L18.3314 20.7415L22.0454 23.8843C21.7826 24.1231 26 21.0001 26 15.0001C26 14.1955 25.9172 13.4101 25.7666 12.6499Z" fill="#1565C0"></path></svg>
        ),
    },
    {
        id: 2,
        name: 'Facebook',
        icon: (
            <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14 2C7.373 2 2 7.40068 2 14.0618C2 20.1088 6.432 25.1024 12.206 25.9749V17.2582H9.237V14.088H12.206V11.9781C12.206 8.48524 13.899 6.95238 16.787 6.95238C18.17 6.95238 18.902 7.05591 19.248 7.10215V9.86933H17.278C16.052 9.86933 15.624 11.0383 15.624 12.3551V14.088H19.217L18.73 17.2582H15.624V26C21.481 25.2019 26 20.1681 26 14.0618C26 7.40068 20.627 2 14 2Z" fill="#2F6CE3"></path></svg>
        ),
    },
    {
        id: 3,
        name: 'Apple',
        icon: (
            <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M23.3432 9.86825C23.2286 9.94067 20.5006 11.469 20.5006 14.8578C20.6292 18.7224 23.9432 20.0777 24 20.0777C23.9432 20.1501 23.4997 21.924 22.186 23.7834C21.1435 25.3851 19.9863 27 18.2292 27C16.5577 27 15.9577 25.9325 14.0292 25.9325C11.958 25.9325 11.372 27 9.7863 27C8.02915 27 6.78629 25.2986 5.68691 23.7119C4.25864 21.6352 3.04467 18.3763 3.00181 15.2471C2.97293 13.589 3.28783 11.9591 4.08722 10.5746C5.21548 8.6418 7.22977 7.32976 9.42947 7.2865C11.1149 7.22913 12.6149 8.45464 13.6435 8.45464C14.6292 8.45464 16.472 7.2865 18.5571 7.2865C19.4571 7.28744 21.8571 7.56113 23.3432 9.86825ZM13.5009 6.95543C13.2009 5.44118 14.0292 3.92693 14.8006 2.961C15.7863 1.79287 17.3432 1 18.6857 1C18.7714 2.51425 18.2282 3.99935 17.2574 5.08096C16.3863 6.2491 14.8863 7.12849 13.5009 6.95543Z" fill="black"></path></svg>
        ),
    },
    {
        id: 4,
        name: '500px',
        icon: (
            <span className='dark:text-white'>
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_8667_31104__WmwYUmTK)"><circle cx="12" cy="12" r="12" fill="black"></circle><path fill-rule="evenodd" clip-rule="evenodd" d="M21.0477 10.8278L21.9519 9.92078C21.9847 9.88783 22.0616 9.81059 21.9059 9.64988C21.8392 9.58089 21.7783 9.54574 21.7252 9.54534H21.7242C21.6784 9.54534 21.6475 9.56998 21.6233 9.59418L20.7171 10.5033L19.8124 9.59008C19.7393 9.51665 19.6536 9.53386 19.5432 9.64446C19.4309 9.7577 19.4126 9.84462 19.4854 9.91813L20.3903 10.8313L19.5041 11.7204L19.4977 11.7266C19.4761 11.7476 19.4436 11.7792 19.4431 11.8308C19.4428 11.8841 19.4781 11.9467 19.5482 12.0171C19.6074 12.0765 19.6635 12.1067 19.715 12.1067C19.7731 12.1066 19.8102 12.0693 19.8311 12.0483L20.7207 11.1558L21.6304 12.0685C21.6419 12.08 21.674 12.1065 21.7254 12.1065H21.7272C21.7847 12.1058 21.8453 12.0723 21.9073 12.007C22.0094 11.8995 22.0264 11.8099 21.9578 11.7407L21.0477 10.8278ZM17.7815 9.52484C17.1115 9.57597 16.5867 10.1671 16.5867 10.8707V13.0954C16.5867 13.2243 16.6844 13.2507 16.8309 13.2507C16.9775 13.2507 17.0752 13.2243 17.0752 13.0954V10.8655C17.0752 10.4271 17.3931 10.0508 17.7989 10.0086C18.0319 9.98475 18.2557 10.0579 18.4299 10.2155C18.6008 10.3701 18.699 10.5923 18.6991 10.8253C18.6991 10.892 18.6665 11.1092 18.5179 11.3107C18.4055 11.4631 18.1927 11.6445 17.8153 11.6445C17.8132 11.6446 17.8105 11.6445 17.8081 11.6445C17.7114 11.6445 17.6286 11.6491 17.6127 11.8792C17.602 12.0341 17.6029 12.1034 17.7362 12.122C17.9742 12.1551 18.2167 12.1084 18.4571 11.9831C18.8675 11.7689 19.1425 11.363 19.1748 10.9237C19.2029 10.5422 19.0657 10.17 18.7984 9.90249C18.5301 9.63407 18.1597 9.49659 17.7815 9.52484ZM3.90992 10.9993C3.42983 10.9302 2.96167 11.0583 2.58039 11.3527V10.0277H4.81852C4.89627 10.0277 4.95203 10.0137 4.95203 9.7833C4.95203 9.55851 4.86176 9.5496 4.8022 9.5496H2.32387C2.17995 9.5496 2.10379 9.66637 2.10379 9.79586V11.9704C2.10379 12.0844 2.17587 12.1231 2.30995 12.1497C2.42735 12.173 2.49551 12.1594 2.54683 12.1023L2.55223 12.094C2.78836 11.7526 3.30211 11.4218 3.7904 11.4818C4.37327 11.5533 4.84259 12.0198 4.90679 12.5909C4.94772 12.9553 4.83687 13.3056 4.59488 13.5772C4.35596 13.8454 4.01392 13.9993 3.65664 13.9993C3.12731 13.9993 2.66467 13.6579 2.47203 13.1626C2.44351 13.0892 2.39535 13.0349 2.18683 13.111C1.99523 13.1809 1.98415 13.2618 2.01055 13.335C2.26135 14.0278 2.92283 14.4933 3.65655 14.4933C4.15348 14.4933 4.62903 14.2796 4.96131 13.9069C5.29796 13.5294 5.45087 13.0427 5.39455 12.5365C5.30631 11.7441 4.69488 11.112 3.90992 10.9993ZM13.5865 13.9669C12.5053 13.9669 11.6258 13.0846 11.6258 12C11.6258 10.9154 12.5053 10.0331 13.5865 10.0331C14.6674 10.0331 15.5469 10.9154 15.5469 12C15.5469 13.0846 14.6674 13.9669 13.5865 13.9669ZM13.5865 9.5C12.2122 9.5 11.0943 10.6215 11.0943 12C11.0943 13.3785 12.2122 14.5 13.5865 14.5C14.9605 14.5 16.0784 13.3785 16.0784 12C16.0784 10.6215 14.9605 9.5 13.5865 9.5ZM8.19318 9.5C6.81902 9.5 5.70102 10.6215 5.70102 12C5.70102 13.3785 6.81902 14.5 8.19318 14.5C9.5673 14.5 10.6852 13.3785 10.6852 12C10.6852 10.6215 9.5673 9.5 8.19318 9.5ZM8.19321 13.9669C7.11212 13.9669 6.2326 13.0846 6.2326 12C6.2326 10.9154 7.11212 10.0331 8.19321 10.0331C9.27424 10.0331 10.1537 10.9154 10.1537 12C10.1537 13.0846 9.27424 13.9669 8.19321 13.9669Z" fill="white"></path></g><defs><clipPath id="clip0_8667_31104__WmwYUmTK"><rect width="24" height="24" fill="white"></rect></clipPath></defs></svg>
            </span>
        ),
    },
];

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: 'Link Social Account',
        href: "/settings/link-social-account",
    },
];



const SocialLinks = () => {
    // You would typically manage state for each input field here
    // const [website, setWebsite] = useState('');
    // const [instagram, setInstagram] = useState('');
    // ...

    const handleSubmit = (e) => {
        e.preventDefault();
        // Handle form submission logic here
        console.log('Form submitted!');
    };

    return (

        <AppLayout breadcrumbs={breadcrumbs}>
            <Head title="Profile settings" />

            <SettingsLayout>
                <HeadingSmall
                    title="Add Social Links"
                    description="Add your social links to your profile"
                />

                <Form
                    {...PasswordController.update.form()}
                    options={{
                        preserveScroll: true,
                    }}
                    resetOnError={[
                        'password',
                        'password_confirmation',
                        'current_password',
                    ]}
                    resetOnSuccess
                    onError={(errors) => {
                        if (errors.password) {
                            passwordInput.current?.focus();
                        }

                        if (errors.current_password) {
                            currentPasswordInput.current?.focus();
                        }
                    }}
                    className="space-y-6"
                >
                    {({ errors, processing, recentlySuccessful }) => (
                        <>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl w-full">
                                {linkData.map((link) => (
                                    <SocialAccountLinkCard key={link.id} name={link.name} icon={link.icon} />
                                ))}
                            </div>
                        </>
                    )}
                </Form>
            </SettingsLayout>
        </AppLayout>
    );
};

export default SocialLinks;
